name: tp-1
on:
 push:
  branches : dani
 workflow_dispatch:

jobs:
  train-and-evaluate:
   runs-on: ubuntu-latest
   steps:
    - name: checkout repo
      uses: actions/checkout@v3
    - name: set-up-python
      uses: actions/setup-python@v4
      with:
       python-version: "3.10"
    - name: install dependences
      run: |
       python -m pip install --upgrade pip
       python -m pip install -r  script/requirements.txt
    - name: generate doc
      run: |
        mkdir -p doc
        python -m pydoc -w script/training.py
        python -m pydoc -w script/evaluation.py
        mv training.html  evaluation.html doc/

    - name: python list
      run: pip list
    - name: Check sklearn installation
      run: python -c "import sklearn; print('✅ sklearn version:', sklearn.__version__)"
    - name: train the model
      run:
       python script/training.py

    - name: evaluate the model
      run:
       python script/evaluation.py
    - name: Read evaluation metrics
      id: metrics
      run: |
        sudo apt-get install -y jq
        accuracy=$(jq '.accuracy' results.json)
        f1=$(jq '.f1_score' results.json)
        echo "accuracy=$accuracy" >> $GITHUB_OUTPUT
        echo "f1=$f1" >> $GITHUB_OUTPUT
    - name: Notify if email will be sent
      run: |
        if (( $(echo "${{ steps.metrics.outputs.accuracy }} >= 0.85" | bc -l) )) || (( $(echo "${{ steps.metrics.outputs.f1 }} >= 0.85" | bc -l) )); then
          echo "✅ Metrics passed threshold, MODEL will be deployed."
        else
          echo "⚠️ Metrics below threshold, MODEL will be deployed"
        fi
    - name: deploy model
      env:
        HF_TOKEN: ${{secrets.HF_TOKEN}}
        THRESHOLD_SCORE: ${{secrets.THRESHOLD_SCORE}}
      if: ${{ steps.metrics.outputs.accuracy >= 0.85 || steps.metrics.outputs.f1 >= 0.85 }}
      run: python script/deploy.py
    - name: create zip model + docs
      run: |
       zip -r bundle.zip model/ doc/
    - name: install email dependences
      run: |
       python -m pip install secure-smtplib
    - name: send mail
      env:
       SMTP_SERVER: ${{secrets.SMTP_SERVER}}
       SMTP_PORT : ${{secrets.SMTP_PORT}}
       EMAIL_SENDER: ${{secrets.EMAIL_SENDER}}
       EMAIL_RECEIVER: ${{secrets.EMAIL_RECEIVER}}
       EMAIL_PASSWORD: ${{secrets.EMAIL_PASSWORD}}
       
      run: python script/send_email.py

  


